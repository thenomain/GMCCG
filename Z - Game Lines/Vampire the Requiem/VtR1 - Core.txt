/*
################################################################################
## VAMPIRE: THE REQUIEM ########################################################

This file includes all additions to the system for Vampire: The Requiem 
core rules


--------------------------------------------------------------------------------
-- Pre-Setting Attributes ------------------------------------------------------

If you don't have the attributes set on yourself, run this code:

@fo me=&d.sfp me=search( name=Stat Functions Prototype <sfp> )
@fo me=&d.dd me=search( name=Data Dictionary <dd> )
@fo me=&d.dt me=search( name=Data Tags <d:t> )

@fo me=&d.xpas me=search( name=XP Advancement System <xpas> )
@fo me=&d.xpcd me=search( name=XP Cost Database <xpcd> )

@fo me=&d.cg me=search( name=GMC Chargen <cg> )
@fo me=&d.sheet me=search( name=Sheet: Rows )

@fo me=&d.psrs me=search( name=Pool Spend Regain System <psrs> )



################################################################################
## VAMPIRE: STAT FUNCTIONS #####################################################

--------------------------------------------------------------------------------
-- SFP: Search Order -----------------------------------------------------------

Level 2 for powers 
Level 3 for very minor items
*/

&d.search-order-02-vampire [v( d.sfp )]=discipline
&d.search-order-03-vampire [v( d.sfp )]=devotion rite miracle scale

// -- XPCD tweak --

@fo me=&d.sfp [v( d.xpcd )]=search( name=Stat Functions Prototype <sfp> )



/*
################################################################################
## VAMPIRE: DATA DICTIONARY ####################################################



================================================================================
== DD: SETUP ===================================================================
*/

// CODP prefixes
&prefix.vampire_-_disciplines [v( d.dd )]=discipline.

&prefix.vampire_-_disciplines [v( d.dd )]=tags.discipline.


// add to templates
@fo me=&bio.template [v( d.dd )]=[get( v( d.dd )/bio.template )].Vampire.Ghoul


// register "max trait" statpath
&.max_trait.vampire [v( d.dd )]=advantage.blood_potency


// register "sphere"'s templates (could this be folded into 'templates'?)
&.sphere.vampire [v( d.dd )]=Vampire Ghoul


// -----------------------------------------------------------------------------
// -- DD: Tags for Ghouls ------------------------------------------------------

@edit v( d.dt )/tags.advantage.integrity=$, .ghoul


/*
================================================================================
== VAMPIRE BIO =================================================================
*/

&bio.embrace_date [v( d.dd )]=*
&tags.bio.embrace_date [v( d.dt )]=vampire

&bio.clan [v( d.dd )]=Daeva.Gangrel.Mekhet.Nosferatu.Ventrue
&tags.bio.clan [v( d.dt )]=vampire.ghoul

&bio.covenant [v( d.dd )]=
	Carthian Movement.Circle of the Crone.Invictus.Lancea et Sanctum.Ordo Dracul
&tags.bio.covenant [v( d.dt )]=vampire

&bio.coterie [v( d.dd )]=*
&tags.bio.coterie [v( d.dt )]=vampire.ghoul.clique

&bio.mask [v( d.dd )]=
	Authoritarian.Child.Competitor.Conformist.Conspirator.Courtesan.
	Cult Leader.Deviant.Follower.Guru.Idealist.Jester.Junkie.Martyr.Masochist.
	Monster.Nomad.Nurturer.Perfectionist.Penitent.Questioner.Rebel.Scholar.
	Social Chameleon.Spy.Survivor.Visionary
&tags.bio.mask [v( d.dt )]=vampire

&bio.dirge [v( d.dd )]=
	Authoritarian.Child.Competitor.Conformist.Conspirator.Courtesan.
	Cult Leader.Deviant.Follower.Guru.Idealist.Jester.Junkie.Martyr.Masochist.
	Monster.Nomad.Nurturer.Perfectionist.Penitent.Questioner.Rebel.Scholar.
	Social Chameleon.Spy.Survivor.Visionary
&tags.bio.dirge [v( d.dt )]=vampire


/*
================================================================================
== VAMPIRE ADVANTAGES ==========================================================
*/

// 'Humanity' is now 'Integrity'
@edit [v( d.dt )]/tags.advantage.integrity=$, .vampire

&advantage.blood_potency [v( d.dd )]=1.2.3.4.5.6.7.8.9.10
&default.advantage.blood_potency [v( d.dd )]=1
&tags.advantage.blood_potency [v( d.dt )]=power.vampire

&advantage.vitae [v( d.dd )]=
	ladd( u( .value_full, %0, advantage.vitae_maximum ), . )
&default.advantage.vitae [v( d.dd )]=derived
&tags.advantage.vitae [v( d.dt )]=derived.vampire.ghoul

&advantage.vitae_maximum [v( d.dd )]=
	if( u( .is_full, %0, bio.template, vampire ), 

		elements( 
			10 11 12 13 15 20 25 30 50 75, 
			u( .value, %0, advantage.blood_potency )
		), 

		u( .value_stats, %0, attribute.stamina discipline.resilience )
	)
&default.advantage.vitae_maximum [v( d.dd )]=derived
&tags.advantage.vitae_maximum [v( d.dt )]=derived.vampire.ghoul

&health.maximum.vampire [v( d.dd )]=u( .value_stats, %0, discipline.resilience )
&health.maximum.ghoul [v( d.dd )]=u( .value_stats, %0, discipline.resilience )


/*
================================================================================
== VAMPIRE MERITS ==============================================================
*/

&merit.acute_senses [v( d.dd )]=1
&tags.merit.acute_senses [v( d.dt )]=vampire

&merit.altar [v( d.dd )]=3
&tags.merit.altar [v( d.dt )]=vampire.circle of the crone
&prerequisite.merit.altar [v( d.dd )]=
	u( .has, %0, merit.status_(circle_of_the_crone) )
&prereq-text.merit.altar [v( d.dd )]=Status (Circle of the Crone) 1

&merit.anointed [v( d.dd )]=2
&tags.merit.anointed [v( d.dt )]=vampire.lancea et sanctum
&prerequisite.merit.anointed [v( d.dd )]=
	u( .has, %0, merit.status_(lancea_et_sanctum) )
&prereq-text.merit.anointed [v( d.dd )]=Status (Lancea et Sanctum) 1

&merit.atrocious [v( d.dd )]=1
&tags.merit.atrocious [v( d.dt )]=vampire
&prerequisite.merit.atrocious [v( d.dd )]=
	u( .has_none_of, %0, merit.cutthroat merit.enticing )
&prereq-text.merit.atrocious [v( d.dd )]=
	Cannot have the Cutthroat or Enticing Merits

&merit.attache [v( d.dd )]=1
&tags.merit.attache [v( d.dt )]=vampire.invictus
&prerequisite.merit.attache [v( d.dd )]=u( .has, %0, merit.status_(invictus) )
&prereq-text.merit.attache [v( d.dd )]=Status (Invictus) 1

&merit.bloodhound [v( d.dd )]=2
&tags.merit.bloodhound [v( d.dt )]=vampire
&prerequisite.merit.bloodhound [v( d.dd )]=u( .at_least, %0, attribute.wits, 3 )
&prereq-text.merit.bloodhound [v( d.dd )]=Wits 3

&merit.cacophony_savvy [v( d.dd )]=1.2.3
&tags.merit.cacophony_savvy [v( d.dt )]=vampire.praxis
&prerequisite.merit.cacophony_savvy [v( d.dd )]=
	u( .has, %0, merit.status_(praxis) )
&prereq-text.merit.cacophony_savvy [v( d.dd )]=Status (Praxis) 1

&merit.carthian_pull [v( d.dd )]=1
&tags.merit.carthian_pull [v( d.dt )]=vampire.carthian movement
&prerequisite.merit.carthian_pull [v( d.dd )]=
	u( .has, %0, merit.status_(carthian_movement) )
&prereq-text.merit.carthian_pull [v( d.dd )]=Status (Carthian Movement) 1

&merit.claws_of_the_unholy [v( d.dd )]=1
&tags.merit.claws_of_the_unholy [v( d.dt )]=vampire
&prerequisite.merit.claws_of_the_unholy [v( d.dd )]=
	u( .at_least, %0, discipline.protean, 4 )
&prereq-text.merit.claws_of_the_unholy [v( d.dd )]=Protean 4

&merit.close_family [v( d.dd )]=1
&tags.merit.close_family [v( d.dt )]=vampire

&merit.cutthroat [v( d.dd )]=1
&tags.merit.cutthroat [v( d.dt )]=vampire
&prerequisite.merit.cutthroat [v( d.dd )]=
	u( .has_none_of, %0, merit.atrocious merit.enticing )
&prereq-text.merit.cutthroat [v( d.dd )]=
	Cannot have the Atrocious or Enticing Merits

&merit.distinguished_palate [v( d.dd )]=1
&tags.merit.distinguished_palate [v( d.dt )]=vampire

&merit.dream_visions [v( d.dd )]=1
&tags.merit.dream_visions [v( d.dt )]=vampire.mekhet
&prerequisite.merit.dream_visions [v( d.dd )]=
	u( .is_full, %0, bio.clan, Mekhet )
&prereq-text.merit.dream_visions [v( d.dd )]=Must be Mekhet

&merit.dynasty_membership [v( d.dd )]=1.2.3
&tags.merit.dynasty_membership [v( d.dt )]=vampire
&prerequisite.merit.dynasty_membership [v( d.dd )]=
	u( .has, %0, merit.status_([u( .value_full, %0, bio.clan )]) )
&prereq-text.merit.dynasty_membership [v( d.dd )]=Status (<clan>) 1

&merit.enticing [v( d.dd )]=1
&tags.merit.enticing [v( d.dt )]=vampire
&prerequisite.merit.enticing [v( d.dd )]=
	u( .has_none_of, %0, merit.atrocious merit.cutthroat )
&prereq-text.merit.enticing [v( d.dd )]=
	Cannot have the Atrocious or Cutthroat Merits

&merit.feeding_grounds_() [v( d.dd )]=1.2.3.4.5
&tags.merit.feeding_grounds_() [v( d.dt )]=vampire.location

&merit.friends_in_high_places [v( d.dd )]=1
&tags.merit.friends_in_high_places [v( d.dt )]=vampire.invictus
&prerequisite.merit.friends_in_high_places [v( d.dd )]=
	u( .has, %0, merit.status_(invictus) )
&prereq-text.merit.friends_in_high_places [v( d.dd )]=Status (Invictus) 1

&merit.haven_() [v( d.dd )]=1.2.3.4.5|*
&tags.merit.haven_() [v( d.dt )]=vampire.location
&prerequisite.merit.haven_() [v( d.dd )]=
	u( .at_least, %0, 
		merit.haven_(%1), 
		u( .value, %0, merit.safe_place_(%1)), 
		%2 
	)
&prereq-text.merit.haven_() [v( d.dd )]=
	Safe Place (<place name>) must be same or higher

&merit.herd [v( d.dd )]=1.2.3.4.5
&tags.merit.herd [v( d.dt )]=vampire

&merit.honey_trap [v( d.dd )]=1
&tags.merit.honey_trap [v( d.dt )]=vampire

&merit.invested [v( d.dd )]=1
&tags.merit.invested [v( d.dt )]=vampire.invictus
&prerequisite.merit.invested [v( d.dd )]=u( .has, %0, merit.status_(invictus) )
&prereq-text.merit.invested [v( d.dd )]=Status (Invictus) 1

&merit.kiss_of_the_succubus [v( d.dd )]=1
&tags.merit.kiss_of_the_succubus [v( d.dt )]=vampire.daeva
&prerequisite.merit.kiss_of_the_succubus [v( d.dd )]=
	u( .is, %0, bio.clan, Daeva )
&prereq-text.merit.kiss_of_the_succubus [v( d.dd )]=Must be Daeva

&merit.lineage [v( d.dd )]=1
&tags.merit.lineage [v( d.dt )]=vampire
&prerequisite.merit.lineage [v( d.dd )]=
	u( .has, %0, merit.status_([u( .value_full, %0, bio.clan )]) )
&prereq-text.merit.lineage [v( d.dd )]=Status (<clan>) 1

&merit.lorekeeper [v( d.dd )]=1
&tags.merit.lorekeeper [v( d.dt )]=vampire.lancea et sanctum
&prerequisite.merit.lorekeeper [v( d.dd )]=
	u( .has, %0, merit.status_(lancea_et_sanctum) )
&prereq-text.merit.lorekeeper [v( d.dd )]=Status (Lancea et Sanctum) 1

&merit.the_mother_daughter_bond [v( d.dd )]=1
&tags.merit.the_mother_daughter_bond [v( d.dt )]=vampire.circle of the crone
&prerequisite.merit.the_mother_daughter_bond [v( d.dd )]=
	u( .has, %0, merit.status_(circle_of_the_crone) )
&prereq-text.merit.the_mother_daughter_bond [v( d.dd )]=
	Status (Circle of the Crone) 1

&merit.night_doctor_surgery [v( d.dd )]=3
&tags.merit.night_doctor_surgery [v( d.dt )]=vampire.carthian movement
&prerequisite.merit.night_doctor_surgery [v( d.dd )]=
	u( .at_least, %0, merit.status_(carthian_movement), 2 )
&prereq-text.merit.night_doctor_surgery [v( d.dd )]=Status (Carthian Movement) 2

&merit.speaker_for_the_silent [v( d.dd )]=3
&tags.merit.speaker_for_the_silent [v( d.dt )]=vampire.invictus
&prerequisite.merit.speaker_for_the_silent [v( d.dd )]=
	u( .at_least_all, %0, merit.dynasty_membership:1 merit.status_(invictus):1 )
&prereq-text.merit.speaker_for_the_silent [v( d.dd )]=
	Dynasty Membership 1, Status (Invictus) 1

&merit.pack_alpha [v( d.dd )]=1
&tags.merit.pack_alpha [v( d.dt )]=vampire.gangrel
&prerequisite.merit.pack_alpha [v( d.dd )]=u( .is, %0, bio.clan, Gangrel )
&prereq-text.merit.pack_alpha [v( d.dd )]=Must be Gangrel

&merit.unnatural_affinity_() [v( d.dd )]=1|*
&tags.merit.unnatural_affinity_() [v( d.dt )]=vampire

&merit.swarm_form [v( d.dd )]=2
&tags.merit.swarm_form [v( d.dt )]=vampire
&prerequisite.merit.swarm_form [v( d.dd )]=
	u( .at_least, %0, discipline.protean, 3 )
&prereq-text.merit.swarm_form [v( d.dd )]=Protean 3

&merit.secret_society_junkie [v( d.dd )]=1
&tags.merit.secret_society_junkie [v( d.dt )]=vampire.ordo dracul
&prerequisite.merit.secret_society_junkie [v( d.dd )]=
	u( .has, %0, merit.status_(ordo_dracul) )
&prereq-text.merit.secret_society_junkie [v( d.dd )]=Status (Ordo Dracul) 1

&merit.sworn_() [v( d.dd )]=1|Axe.Mysteries.Dying Light
&tags.merit.sworn_() [v( d.dt )]=vampire.ordo dracul
&prerequisite.merit.sworn_() [v( d.dd )]=
	cand( 
		u( .has, %0, merit.status_(ordo_dracul) ), 
		not( lattr( %0/_merit.sworn_(*) ))
	)
&prereq-text.merit.sworn_() [v( d.dd )]=Status (Ordo Dracul) 1, only one Sworn.

&merit.i_know_a_guy [v( d.dd )]=1
&tags.merit.i_know_a_guy [v( d.dt )]=vampire.carthian movement
&prerequisite.merit.i_know_a_guy [v( d.dd )]=
	u( .has, %0, merit.status_(carthian_movement) )
&prereq-text.merit.i_know_a_guy [v( d.dd )]=Status (Carthian Movement) 1

&merit.touchstone [v( d.dd )]=1.2.3.4.5
&tags.merit.touchstone [v( d.dt )]=vampire

&merit.undead_menses [v( d.dd )]=2
&tags.merit.undead_menses [v( d.dt )]=vampire

&merit.unsettling_gaze [v( d.dd )]=1
&tags.merit.unsettling_gaze [v( d.dt )]=vampire.nosferatu
&prerequisite.merit.unsettling_gaze [v( d.dd )]=
	u( .is, %0, bio.clan, Nosferatu )
&prereq-text.merit.unsettling_gaze [v( d.dd )]=Must be Nosferatu

&merit.where_the_bodies_are_buried [v( d.dd )]=2
&tags.merit.where_the_bodies_are_buried [v( d.dt )]=vampire.invictus
&prerequisite.merit.where_the_bodies_are_buried [v( d.dd )]=
	u( .at_least, %0, merit.status_(invictus), 2 )
&prereq-text.merit.where_the_bodies_are_buried [v( d.dd )]=Status (Invictus) 2


// -- Vampire Merits: Carthian Law --

&merit.lex_terrae [v( d.dd )]=1
&tags.merit.lex_terrae [v( d.dt )]=vampire.location.carthian movement
&prerequisite.merit.lex_terrae [v( d.dd )]=
	u( .at_least_all, %0, 
		merit.status_(carthian_movement):2 merit.feeding_grounds_(%1):1 
	)
&prereq-text.merit.lex_terrae [v( d.dd )]=
	Status (Carthian Movement) 2, Feeding Grounds (<place name>) 1

&merit.mandate_from_the_masses [v( d.dd )]=1
&tags.merit.mandate_from_the_masses [v( d.dt )]=vampire.carthian movement
&prerequisite.merit.mandate_from_the_masses [v( d.dd )]=
	u( .at_least, %0, merit.status_(carthian_movement), 5 )
&prereq-text.merit.mandate_from_the_masses [v( d.dd )]=
	Status (Carthian Movement) 5

&merit.right_of_return [v( d.dd )]=1
&tags.merit.right_of_return [v( d.dt )]=vampire.carthian movement.praxis
&prerequisite.merit.right_of_return [v( d.dd )]=
	u( .at_least_all, %0, 
		merit.status_(carthian_movement):2 merit.status_(praxis):1 
	)
&prereq-text.merit.right_of_return [v( d.dd )]=
	Status (Carthian Movement) 2, Status (Praxis) 1

&merit.strength_of_resolution [v( d.dd )]=1
&tags.merit.strength_of_resolution [v( d.dt )]=vampire.carthian movement
&prerequisite.merit.strength_of_resolution [v( d.dd )]=
	u( .has, %0, merit.status_(carthian_movement) )
&prereq-text.merit.strength_of_resolution [v( d.dd )]=
	Status (Carthian Movement) 1

&merit.plausible_deniability [v( d.dd )]=1
&tags.merit.plausible_deniability [v( d.dt )]=vampire.carthian movement
&prerequisite.merit.plausible_deniability [v( d.dd )]=
	u( .at_least, %0, merit.status_(carthian_movement), 3 )
&prereq-text.merit.plausible_deniability [v( d.dd )]=
	Status (Carthian Movement) 3


// -- Vampire Merits: Invictus Oaths --

&merit.notary [v( d.dd )]=2
&tags.merit.notary [v( d.dt )]=vampire.invictus
&prerequisite.merit.notary [v( d.dd )]=
	u( .at_least, %0, merit.status_(invictus), 3 )
&prereq-text.merit.notary [v( d.dd )]=Status (Invictus) 3

&merit.oath_of_action [v( d.dd )]=4
&tags.merit.oath_of_action [v( d.dt )]=vampire

&merit.oath_of_fealty [v( d.dd )]=1
&tags.merit.oath_of_fealty [v( d.dt )]=vampire.invictus
&prerequisite.merit.oath_of_fealty [v( d.dd )]=
	u(.has, %0, merit.status_(invictus))
&prereq-text.merit.oath_of_fealty [v( d.dd )]=Status (Invictus) 1

&merit.oath_of_penance [v( d.dd )]=3
&tags.merit.oath_of_penance [v( d.dt )]=vampire

&merit.oath_of_serfdom [v( d.dd )]=2
&tags.merit.oath_of_serfdom [v( d.dt )]=vampire


// -- Vampire Merits: Kindred Fighting Styles --

&merit.kindred_dueling [v( d.dd )]=1.2.3.4.5
&tags.merit.kindred_dueling [v( d.dt )]=vampire.physical.fighting.style
&prerequisite.merit.kindred_dueling [v( d.dd )]=
	cand( 
		t( lattr( %0/_merit.fighting_finesse_(*) )), 
		u( .at_least_all, %0, attribute.composure:3 skill.weaponry:2 )
	)
&prereq-text.merit.kindred_dueling [v( d.dd )]=
	Fighting Finesse (any), Composure 3, Weaponry 2

&merit.riding_the_wave [v( d.dd )]=1.2.3.4.5
&tags.merit.riding_the_wave [v( d.dt )]=vampire.physical.fighting.style
&prerequisite.merit.riding_the_wave [v( d.dd )]=
	u( .at_least_all, %0, attribute.composure:3 attribute.resolve:3 )
&prereq-text.merit.riding_the_wave [v( d.dd )]=Composure 3, Resolve 3


// -- Ghoul Merits -------------------------------------------------------------

&merit.taste_of_shadow [v( d.dd )]=2
&tags.merit.taste_of_shadow [v( d.dt )]=ghoul.mekhet
&prereq-text.merit.taste_of_shadow [v( d.dd )]=Mekhet Regnant
&prerequisite.merit.taste_of_shadow [v( d.dd )]=u( .is, %0, bio.clan, Mekhet )

&merit.taste_of_serpent [v( d.dd )]=2
&tags.merit.taste_of_serpent [v( d.dt )]=ghoul.daeva
&prerequisite.merit.taste_of_serpent [v( d.dd )]=u( .is, %0, bio.clan, Daeva )
&prereq-text.merit.taste_of_serpent [v( d.dd )]=Daeva Regnant

&merit.taste_of_the_wild [v( d.dd )]=2
&tags.merit.taste_of_the_wild [v( d.dt )]=ghoul.gangrel
&prerequisite.merit.taste_of_the_wild [v( d.dd )]=
	u( .is, %0, bio.clan, Gangrel )
&prereq-text.merit.taste_of_the_wild [v( d.dd )]=Gangrel Regnant

&merit.taste_of_gold [v( d.dd )]=2
&tags.merit.taste_of_gold [v( d.dt )]=ghoul.ventrue
&prerequisite.merit.taste_of_gold [v( d.dd )]=u( .is, %0, bio.clan, Ventrue )
&prereq-text.merit.taste_of_gold [v( d.dd )]=Ventrue Regnant

&merit.taste_of_fear [v( d.dd )]=2
&tags.merit.taste_of_fear [v( d.dt )]=ghoul.nosferatu
&prerequisite.merit.taste_of_fear [v( d.dd )]=u( .is, %0, bio.clan, Nosferatu )
&prereq-text.merit.taste_of_fear [v( d.dd )]=Nosferatu Regnant

// all other minor ("human") templates can gain producer, as well
&merit.producer [v( d.dd )]=1
&tags.merit.producer [v( d.dt )]=ghoul.human

&merit.weakened_bond [v( d.dd )]=3
&tags.merit.weakened_bond [v( d.dt )]=ghoul.human

&merit.clear-sighted [v( d.dd )]=2
&tags.merit.clear-sighted [v( d.dt )]=human

&merit.source_sympathy [v( d.dd )]=1
&tags.merit.source_sympathy [v( d.dt )]=ghoul

// can gain only if they have a Regnant.
&merit.protected [v( d.dd )]=2
&prereq-text.merit.protected [v( d.dd )]=Must be Thrall.
&tags.merit.protected [v( d.dt )]=ghoul.human

// can gain only if they have a Regnant.
&merit.empowered_to_speak [v( d.dd )]=1
&prereq-text.merit.empowered_to_speak [v( d.dd )]=Must be Thrall.
&tags.merit.empowered_to_speak [v( d.dt )]=ghoul.human

&merit.vitae_hound [v( d.dd )]=1
&tags.merit.vitae_hound [v( d.dt )]=ghoul

// can gain only if they have a Regnant.
&merit.beast_whispers [v( d.dd )]=2
&prereq-text.merit.beast_whispers [v( d.dd )]=Must be Thrall.
&tags.merit.beast_whispers [v( d.dt )]=ghoul.human

&merit.beloved_() [v( d.dd )]=1|*
&tags.merit.beloved_() [v( d.dt )]=ghoul.human
&prerequisite.merit.beloved_() [v( d.dd )]=0
&prereq-text.merit.beloved_() [v( d.dd )]=
	Touchstone of the one they're beloved of
// There is absolutely no way for code to determine this; 
// with 'prereq' set to 0 it must be set by staff using the /override switch

&merit.watch_dog [v( d.dd )]=2
&tags.merit.watch_dog [v( d.dt )]=ghoul
&prerequisite.merit.watch_dog [v( d.dd )]=0
&prereq-text.merit.watch_dog [v( d.dd )]=Regnant with Auspex
// There is absolutely no way for code to determine this; 
// with 'prereq' set to 0 it must be set by staff using the /override switch


// -- Human Merits -------------------------------------------------------------

&merit.etiquette [v( d.dd )]=1.2.3.4.5
&prerequisite.merit.etiquette [v( d.dd )]=
	u( .at_least_all, %0, attribute.composure:3 skill.socialize:2 )
&prereq-text.merit.etiquette [v( d.dd )]=Composure 3+, Socialize 2+
&tags.merit.etiquette [v( d.dt )]=style.social



/*
================================================================================
== VAMPIRE DISCIPLINES =========================================================
*/

&discipline.animalism [v( d.dd )]=1.2.3.4.5
&tags.discipline.animalism [v( d.dt )]=vampire.ghoul.gangrel.ventrue

&discipline.auspex [v( d.dd )]=1.2.3.4.5
&tags.discipline.auspex [v( d.dt )]=vampire.ghoul.mekhet

&discipline.celerity [v( d.dd )]=1.2.3.4.5
&tags.discipline.celerity [v( d.dt )]=vampire.ghoul.daeva.mekhet

&discipline.dominate [v( d.dd )]=1.2.3.4.5
&tags.discipline.dominate [v( d.dt )]=vampire.ghoul.ventrue

&discipline.majesty [v( d.dd )]=1.2.3.4.5
&tags.discipline.majesty [v( d.dt )]=vampire.ghoul.daeva

&discipline.nightmare [v( d.dd )]=1.2.3.4.5
&tags.discipline.nightmare [v( d.dt )]=vampire.ghoul.nosferatu

&discipline.obfuscate [v( d.dd )]=1.2.3.4.5
&tags.discipline.obfuscate [v( d.dt )]=vampire.ghoul.mekhet.nosferatu

&discipline.protean [v( d.dd )]=1.2.3.4.5
&tags.discipline.protean [v( d.dt )]=vampire.ghoul.gangrel

&discipline.resilience [v( d.dd )]=1.2.3.4.5
&tags.discipline.resilience [v( d.dt )]=vampire.ghoul.gangrel.ventrue

&discipline.vigor [v( d.dd )]=1.2.3.4.5
&tags.discipline.vigor [v( d.dt )]=vampire.ghoul.daeva.nosferatu


/*
--------------------------------------------------------------------------------
-- Devotions -------------------------------------------------------------------

*/

// &tags.devotion.? [v( d.dt )]=vampire
&class.devotion.? [v( d.dd )]=flag

&devotion.Body_of_Will [v( d.dd )]=Stamina + Survival + Resilience
&prerequisite.devotion.Body_of_Will [v( d.dd )]=
	u( .at_least_all, %0, discipline.resilience:3 disciplinevigor:1 )
&prereq-text.devotion.Body_of_Will [v( d.dd )]=Resilience 3, Vigor 1
&tags.devotion.Body_of_Will [v( d.dt )]=vampire
&xp.devotion.Body_of_Will [v( d.xpcd )]=2

&devotion.Chain_of_Command [v( d.dd )]=
	Intelligence + Persuasion + Dominate, vs. Resolve + Blood Potency
&prerequisite.devotion.Chain_of_Command [v( d.dd )]=
	u( .at_least_all, %0, discipline.Dominate:3 discipline.Vigor:1 )
&prereq-text.devotion.Chain_of_Command [v( d.dd )]=Dominate 3, Vigor 1
&tags.devotion.Chain_of_Command [v( d.dt )]=vampire
&xp.devotion.Chain_of_Command [v( d.xpcd )]=2

&devotion.Cloak_the_Gathering [v( d.dd )]=-
&prerequisite.devotion.Cloak_the_Gathering [v( d.dd )]=
	u( .at_least_all, %0, discipline.Obfuscate:5 )
&prereq-text.devotion.Cloak_the_Gathering [v( d.dd )]=Obfuscate 5
&tags.devotion.Cloak_the_Gathering [v( d.dt )]=vampire
&xp.devotion.Cloak_the_Gathering [v( d.xpcd )]=2 

&devotion.Conditioning [v( d.dd )]=
	Wits + Subterfuge + Dominate vs. Resolve + Blood Potency
&prerequisite.devotion.Conditioning [v( d.dd )]=
	u( .at_least_all, %0, discipline.Dominate:4 )
&prereq-text.devotion.Conditioning [v( d.dd )]=Dominate 4
&tags.devotion.Conditioning [v( d.dt )]=vampire
&xp.devotion.Conditioning [v( d.xpcd )]=2

&devotion.Cross-Contamination [v( d.dd )]=
	Presence + Empathy + Lower of Majesty or Nightmare
&prerequisite.devotion.Cross-Contamination [v( d.dd )]=
	u( .at_least_all, %0, discipline.Majesty:1 discipline.Nightmare:1 )
&prereq-text.devotion.Cross-Contamination [v( d.dd )]=Majesty 1, Nightmare 1
&tags.devotion.Cross-Contamination [v( d.dt )]=vampire
&xp.devotion.Cross-Contamination [v( d.xpcd )]=1

&devotion.Cult_of_Personality [v( d.dd )]=Presence + Socialize + Majesty
&prerequisite.devotion.Cult_of_Personality [v( d.dd )]=
	u( .at_least_all, %0, discipline.Majesty:4 discipline.Vigor:3 )
&prereq-text.devotion.Cult_of_Personality [v( d.dd )]=Majesty 4, Vigor 3
&tags.devotion.Cult_of_Personality [v( d.dt )]=vampire
&xp.devotion.Cult_of_Personality [v( d.xpcd )]=4

&devotion.Enchantment [v( d.dd )]=Manipulation + Empathy + Majesty vs. Composure
&prerequisite.devotion.Enchantment [v( d.dd )]=
	u( .at_least_all, %0, discipline.Majesty:4 discipline.Obfuscate:2 )
&prereq-text.devotion.Enchantment [v( d.dd )]=Majesty 4, Obfuscate 2
&tags.devotion.Enchantment [v( d.dt )]=vampire
&xp.devotion.Enchantment [v( d.xpcd )]=2 

&devotion.Enfeebling_Aura [v( d.dd )]=
	Presence + Intimidation + Majesty vs. Composure + Blood Potency
&prerequisite.devotion.Enfeebling_Aura [v( d.dd )]=
	u( .at_least_all, %0, discipline.Majesty:1 discipline.Resilience:1 )
&prereq-text.devotion.Enfeebling_Aura [v( d.dd )]=Majesty 1, Resilience 1
&tags.devotion.Enfeebling_Aura [v( d.dt )]=vampire
&xp.devotion.Enfeebling_Aura [v( d.xpcd )]=3

&devotion.Foul_Grave [v( d.dd )]=-
&prerequisite.devotion.Foul_Grave [v( d.dd )]=
	u( .at_least_all, %0, discipline.Protean:1 discipline.Nightmare:1 )
&prereq-text.devotion.Foul_Grave [v( d.dd )]=Protean 1, Nightmare 1
&tags.devotion.Foul_Grave [v( d.dt )]=vampire
&xp.devotion.Foul_Grave [v( d.xpcd )]=1

&devotion.Force_of_Nature [v( d.dd )]=
	Removes limitation of Protean transformations. Shift physical attributes.
&prerequisite.devotion.Force_of_Nature [v( d.dd )]=
	u( .at_least_all, %0, discipline.Protean:4 discipline.Resilience:4 )
&prereq-text.devotion.Force_of_Nature [v( d.dd )]=Protean 4, Resilience 4
&tags.devotion.Force_of_Nature [v( d.dt )]=vampire
&xp.devotion.Force_of_Nature [v( d.xpcd )]=5

&devotion.Gargoyle's_Vigilance_() [v( d.dd )]=-|Basic.Advanced
&prerequisite.devotion.Gargoyle's_Vigilance_() [v( d.dd )]=
	cand( 
		u( .at_least_all, %0, discipline.Auspex:1 discipline.Resilience:2 ), 
		if( strmatch( %1, Advanced ), 
			u( .at_least, %0, discipline.protean, 5 )
		)
	)
&prereq-text.devotion.Gargoyle's_Vigilance_() [v( d.dd )]=
	Auspex 1, Resilience 2, Advanced form takes Protean 5, Basic version must be 
	upgraded to Advanced version
&tags.devotion.Gargoyle's_Vigilance_() [v( d.dt )]=vampire
&xp.devotion.Gargoyle's_Vigilance_() [v( d.xpcd )]=
	case( 1, 
		strmatch( %3, devotion.Gargoyle's_Vigilance_(Basic) ), 
		1, 

		cand( 
			strmatch( %3, devotion.Gargoyle's_Vigilance_(Advanced) ), 
			u( .has, %0, devotion.Gargoyle's_Vigilance_(Basic) )
		), 
		3, 

		strmatch( %3, devotion.Gargoyle's_Vigilance_(Advanced) ), 
		4 
	)

&devotion.Hint_of_Fear [v( d.dd )]=-
&prerequisite.devotion.Hint_of_Fear [v( d.dd )]=
	u( .at_least_all, %0, discipline.Celerity:2 discipline.Nightmare:2 )
&prereq-text.devotion.Hint_of_Fear [v( d.dd )]=Celerity 2, Nightmare 2
&tags.devotion.Hint_of_Fear [v( d.dt )]=vampire
&xp.devotion.Hint_of_Fear [v( d.xpcd )]=2

&devotion.Juggernaut's_Gait [v( d.dd )]=-
&prerequisite.devotion.Juggernaut's_Gait [v( d.dd )]=
	u( .at_least_all, %0, discipline.Resilience:5 discipline.Vigor:2 )
&prereq-text.devotion.Juggernaut's_Gait [v( d.dd )]=Resilience 5, Vigor 2
&tags.devotion.Juggernaut's_Gait [v( d.dt )]=vampire
&xp.devotion.Juggernaut's_Gait [v( d.xpcd )]=4

&devotion.Quicken_Sight [v( d.dd )]=-
&prerequisite.devotion.Quicken_Sight [v( d.dd )]=
	u( .at_least_all, %0, discipline.Auspex:1 discipline.Celerity:1 )
&prereq-text.devotion.Quicken_Sight [v( d.dd )]=Auspex 1, Celerity 1
&tags.devotion.Quicken_Sight [v( d.dt )]=vampire
&xp.devotion.Quicken_Sight [v( d.xpcd )]=1

&devotion.Reason's_Salon [v( d.dd )]=-
&prerequisite.devotion.Reason's_Salon [v( d.dd )]=
	u( .at_least_all, %0, discipline.Animalism:4 discipline.Resilience:2 )
&prereq-text.devotion.Reason's_Salon [v( d.dd )]=Animalism 4, Resilience 2
&tags.devotion.Reason's_Salon [v( d.dt )]=vampire
&xp.devotion.Reason's_Salon [v( d.xpcd )]=3

&devotion.Riot [v( d.dd )]=
	Imposes Bestial, Competitive and Wanton conditions on everyone in half mile.
&prerequisite.devotion.Riot [v( d.dd )]=
	u( .at_least_all, %0, discipline.Animalism:4 discipline.Majesty:5 )
&prereq-text.devotion.Riot [v( d.dd )]=Animalism 4, Majesty 5
&tags.devotion.Riot [v( d.dt )]=vampire
&xp.devotion.Riot [v( d.xpcd )]=5

&devotion.Shared_Sight [v( d.dd )]=Intelligence + Empathy + Auspex
&prerequisite.devotion.Shared_Sight [v( d.dd )]=
	u( .at_least_all, %0, discipline.Auspex:4 discipline.Dominate:1 )
&prereq-text.devotion.Shared_Sight [v( d.dd )]=Auspex 4, Dominate 1
&tags.devotion.Shared_Sight [v( d.dt )]=vampire
&xp.devotion.Shared_Sight [v( d.xpcd )]=2

&devotion.Shatter_the_Shroud [v( d.dd )]=-
&prerequisite.devotion.Shatter_the_Shroud [v( d.dd )]=
	u( .at_least_all, %0, discipline.Auspex:2 discipline.Vigor:1 )
&prereq-text.devotion.Shatter_the_Shroud [v( d.dd )]=Auspex 2, Vigor 1
&tags.devotion.Shatter_the_Shroud [v( d.dt )]=vampire
&xp.devotion.Shatter_the_Shroud [v( d.xpcd )]=2

&devotion.Stalwart_Servant [v( d.dd )]=-
&prerequisite.devotion.Stalwart_Servant [v( d.dd )]=
	u( .at_least_all, %0, discipline.Dominate:3 discipline.Resilience:1 )
&prereq-text.devotion.Stalwart_Servant [v( d.dd )]=Dominate 3, Resilience 1
&tags.devotion.Stalwart_Servant [v( d.dt )]=vampire
&xp.devotion.Stalwart_Servant [v( d.xpcd )]=2

&devotion.Subsume_the_Lesser_Beast [v( d.dd )]=
	Manipulation + Animal Ken + Animalism – animal’s Resolve
&prerequisite.devotion.Subsume_the_Lesser_Beast [v( d.dd )]=
	u( .at_least_all, %0, discipline.Animalism:4 discipline.Dominate:2 )
&prereq-text.devotion.Subsume_the_Lesser_Beast [v( d.dd )]=
	Animalism 4, Dominate 2
&tags.devotion.Subsume_the_Lesser_Beast [v( d.dt )]=vampire
&xp.devotion.Subsume_the_Lesser_Beast [v( d.xpcd )]=3

&devotion.Summoning [v( d.dd )]=
	Manipulation + Persuasion + (Dominate or Majesty) 
	vs. Composure + Blood Potency
&prerequisite.devotion.Summoning [v( d.dd )]=
	u( .at_least_one, %0, discipline.Dominate:4 discipline.Majesty:4 )
&prereq-text.devotion.Summoning [v( d.dd )]=Dominate 4 or Majesty 4
&tags.devotion.Summoning [v( d.dt )]=vampire
&xp.devotion.Summoning [v( d.xpcd )]=2

&devotion.Suns_Brutal_Dreamscape [v( d.dd )]=
	Manipulation + Empathy + Nightmare, vs. Composure + Blood Potency
&prerequisite.devotion.Suns_Brutal_Dreamscape [v( d.dd )]=
	u( .at_least_all, %0, discipline.Nightmare:5 discipline.Resilience:2 )
&prereq-text.devotion.Suns_Brutal_Dreamscape [v( d.dd )]=
	Nightmare 5, Resilience 2
&tags.devotion.Suns_Brutal_Dreamscape [v( d.dt )]=vampire
&xp.devotion.Suns_Brutal_Dreamscape [v( d.xpcd )]=4

&devotion.Touch_of_Deprivation [v( d.dd )]=
	Intelligence + Medicine + Auspex vs. Resolve + Blood Potency
&prerequisite.devotion.Touch_of_Deprivation [v( d.dd )]=
	u( .at_least_all, %0, discipline.Obfuscate:4 discipline.Dominate:2 )
&prereq-text.devotion.Touch_of_Deprivation [v( d.dd )]=Obfuscate 4, Dominate 2
&tags.devotion.Touch_of_Deprivation [v( d.dt )]=vampire
&xp.devotion.Touch_of_Deprivation [v( d.xpcd )]=3

&devotion.Undying_Familiar [v( d.dd )]=-
&prerequisite.devotion.Undying_Familiar [v( d.dd )]=
	u( .at_least_all, %0, discipline.Animalism:2 discipline.Resilience:2 )
&prereq-text.devotion.Undying_Familiar [v( d.dd )]=Animalism 2, Resilience 2
&tags.devotion.Undying_Familiar [v( d.dt )]=vampire
&xp.devotion.Undying_Familiar [v( d.xpcd )]=1

&devotion.Wet_Dreams [v( d.dd )]=
	Manipulation + Empathy + Majesty, vs. Composure + Blood Potency
&prerequisite.devotion.Wet_Dreams [v( d.dd )]=
	u( .at_least_all, %0, discipline.Majesty:2 discipline.Nightmare:2 )
&prereq-text.devotion.Wet_Dreams [v( d.dd )]=Majesty 2, Nightmare 2
&tags.devotion.Wet_Dreams [v( d.dt )]=vampire
&xp.devotion.Wet_Dreams [v( d.xpcd )]=2

&devotion.The_Wish [v( d.dd )]=Manipulation + Persuasion + Majesty
&prerequisite.devotion.The_Wish [v( d.dd )]=
	u( .at_least_all, %0, discipline.Celerity:2 discipline.Majesty:4 )
&prereq-text.devotion.The_Wish [v( d.dd )]=Celerity 2, Majesty 4
&tags.devotion.The_Wish [v( d.dt )]=vampire
&xp.devotion.The_Wish [v( d.xpcd )]=2

&devotion.Vermin_Flood [v( d.dd )]=
	Summons massive swarm of vermin. Do lethal damage to everything in an area.
&prerequisite.devotion.Vermin_Flood [v( d.dd )]=
	u( .at_least_all, %0, discipline.Animalism:3 discipline.Celerity:2 )
&prereq-text.devotion.Vermin_Flood [v( d.dd )]=Animalism 3, Celerity 2
&tags.devotion.Vermin_Flood [v( d.dt )]=vampire
&xp.devotion.Vermin_Flood [v( d.xpcd )]=4

&devotion.Wraith's_Presence [v( d.dd )]=Wits + Subterfuge + Obfuscate
&prerequisite.devotion.Wraith's_Presence [v( d.dd )]=
	u( .at_least_all, %0, discipline.Obfuscate:3 discipline.Nightmare:1 )
&prereq-text.devotion.Wraith's_Presence [v( d.dd )]=Obfuscate 3, Nightmare 1
&tags.devotion.Wraith's_Presence [v( d.dt )]=vampire
&xp.devotion.Wraith's_Presence [v( d.xpcd )]=2


// -- Blood Sorcery: Theban Sorcery --------------------------------------------
// not listed as denied to ghouls, but we haven't added them
// add '.ghoul' to the tags if you want them to be able to take it

&discipline.theban_sorcery [v( d.dd )]=1.2.3.4.5
&prerequisite.discipline.theban_sorcery [v( d.dd )]=
	u( .is_full, %0, bio.covenant, Lancea et Sanctum )
&prereq-text.discipline.theban_sorcery [v( d.dd )]=Covenant is Lancea et Sanctum
&tags.discipline.theban_sorcery [v( d.dt )]=
	vampire.blood sorcery.lancea et sanctum


// -- Blood Sorcery: Cruac -----------------------------------------------------
// not listed as denied to ghouls, but we haven't added them
// add '.ghoul' to the tags if you want them to be able to take it

&discipline.cruac [v( d.dd )]=1.2.3.4.5
&prerequisite.discipline.cruac [v( d.dd )]=
	u( .is_full, %0, bio.covenant, Circle of the Crone )
&prereq-text.discipline.cruac [v( d.dd )]=Covenant is Circle of the Crone
&tags.discipline.cruac [v( d.dt )]=vampire.blood sorcery.circle of the crone


// -- Coils --------------------------------------------------------------------
// may not be taken by ghouls

&discipline.coil_of_the_ascendant [v( d.dd )]=1.2.3.4.5
&prerequisite.discipline.coil_of_the_ascendant [v( d.dd )]=
	u( .is_full, %0, bio.covenant, Ordo Dracul )
&prereq-text.discipline.coil_of_the_ascendant [v( d.dd )]=
	Covenant is Ordo Dracul
&tags.discipline.coil_of_the_ascendant [v( d.dt )]=vampire.coil.ordo dracul

&discipline.coil_of_the_wyrm [v( d.dd )]=1.2.3.4.5
&prerequisite.discipline.coil_of_the_wyrm [v( d.dd )]=
	u( .is_full, %0, bio.covenant, Ordo Dracul )
&prereq-text.discipline.coil_of_the_wyrm [v( d.dd )]=Covenant is Ordo Dracul
&tags.discipline.coil_of_the_wyrm [v( d.dt )]=vampire.coil.ordo dracul

&discipline.coil_of_the_voivode [v( d.dd )]=1.2.3.4.5
&prerequisite.discipline.coil_of_the_voivode [v( d.dd )]=
	u( .is_full, %0, bio.covenant, Ordo Dracul )
&prereq-text.discipline.coil_of_the_voivode [v( d.dd )]=Covenant is Ordo Dracul
&tags.discipline.coil_of_the_voivode [v( d.dt )]=vampire.coil.ordo dracul




/* 
page 107), and simply knowing the Discipline caps Humanity at 10 – Crúac dots.

Could you not just make the Miracles have a prerequisite of their level in 
Humanity?

A Dragon can have no more dots in each non-Mystery Coil than he possesses dots 
in the Status (Ordo Dracul) Merit

Ritualist characters may buy rites and miracles separately from the Ritual 
Discipline itself for two Experiences each. Every dot of Crúac or Theban 
Sorcery (including the first) also comes with a “free” rite or miracle, taught 
by the covenant as part of ongoing training. If a ritualist has lost the status 
needed to learn new rituals, he can still buy new dots of the Ritual Discipline, 
but does not receive free rituals.

--------------------------------------------------------------------------------
-- Cruac -----------------------------------------------------------------------
*/

&discipline.cruac [v( d.dd )]=1.2.3.4.5
&prerequisite.discipline.cruac [v( d.dd )]=
	cand( 
		u( .is_full, %0, bio.covenant, circle of the crone ), 
		u( .at_least, %0, merit.status_(circle_of_the_crone), 1 )
	)
&prereq-text.discipline.cruac [v( d.dd )]=
	Circle of the Crone, 
	Status (Circle of the Crone) 1
&tags.discipline.cruac [v( d.dt )]=vampire.circle of the crone


// -- Rites --

&class.rite.? [v( d.dd )]=flag

&rite.pangs_of_proserpina [v( d.dd )]=1
&prerequisite.rite.pangs_of_proserpina [v( d.dd )]=
	cand( 
		u( .is_full, %0, bio.covenant, circle of the crone ), 
		u( .at_least, %0, discipline.cruac, v( rite.pangs_of_proserpina ))
	)
&prereq-text.rite.pangs_of_proserpina [v( d.dd )]=
	Circle of the Crone, 
	Cruac at this level or higher
&tags.rite.pangs_of_proserpina [v( d.dt )]=vampire.circle of the crone

&rite.rigor_mortis [v( d.dd )]=1
&prerequisite.rite.rigor_mortis [v( d.dd )]=
	cand( 
		u( .is_full, %0, bio.covenant, circle of the crone ), 
		u( .at_least, %0, discipline.cruac, v( rite.rigor_mortis ))
	)
&prereq-text.rite.rigor_mortis [v( d.dd )]=
	Circle of the Crone, 
	Cruac at this level or higher
&tags.rite.rigor_mortis [v( d.dt )]=vampire.circle of the crone

&rite.cheval [v( d.dd )]=2
&prerequisite.rite.cheval [v( d.dd )]=
	cand( 
		u( .is_full, %0, bio.covenant, circle of the crone ), 
		u( .at_least, %0, discipline.cruac, v( rite.cheval ))
	)
&prereq-text.rite.cheval [v( d.dd )]=
	Circle of the Crone, 
	Cruac at this level or higher
&tags.rite.cheval [v( d.dt )]=vampire.circle of the crone

&rite.the_hydra's_vitae [v( d.dd )]=2
&prerequisite.rite.the_hydra's_vitae [v( d.dd )]=
	cand( 
		u( .is_full, %0, bio.covenant, circle of the crone ), 
		u( .at_least, %0, discipline.cruac, v( rite.the_hydra's_vitae ))
	)
&prereq-text.rite.the_hydra's_vitae [v( d.dd )]=
	Circle of the Crone, 
	Cruac at this level or higher
&tags.rite.the_hydra's_vitae [v( d.dt )]=vampire.circle of the crone

&rite.deflection_of_wooden_doom [v( d.dd )]=3
&prerequisite.rite.deflection_of_wooden_doom [v( d.dd )]=
	cand( 
		u( .is_full, %0, bio.covenant, circle of the crone ), 
		u( .at_least, %0, discipline.cruac, v( rite.deflection_of_wooden_doom ))
	)
&prereq-text.rite.deflection_of_wooden_doom [v( d.dd )]=
	Circle of the Crone, 
	Cruac at this level or higher
&tags.rite.deflection_of_wooden_doom [v( d.dt )]=vampire.circle of the crone

&rite.shadowcall [v( d.dd )]=3
&prerequisite.rite.shadowcall [v( d.dd )]=
	cand( 
		u( .is_full, %0, bio.covenant, circle of the crone ), 
		u( .at_least, %0, discipline.cruac, v( rite.shadowcall ))
	)
&prereq-text.rite.shadowcall [v( d.dd )]=
	Circle of the Crone, 
	Cruac at this level or higher
&tags.rite.shadowcall [v( d.dt )]=vampire.circle of the crone

/* *** WARNING ***
If you also have Werewolf, you may need this:

&rite.shadowcall [v( d.dd )]=3
&tags.rite.shadowcall [v( d.dt )]=werewolf.wolf-blooded.pack.vampire.circle of the crone

&prerequisite.rite.shadowcall [v( d.dd )]=
	if( u( .is_full, %0, bio.template, vampire ), 
		cand( 
			u( .is_full, %0, bio.covenant, circle of the crone ), 
			u( .at_least, %0, discipline.cruac, v( rite.shadowcall ))
		)
	)

&prereq-text.rite.shadowcall [v( d.dd )]=
	If Vampire: 
	Circle of the Crone, 
	Cruac at this level or higher
*/

&rite.touch_of_the_morrigan [v( d.dd )]=3
&prerequisite.rite.touch_of_the_morrigan [v( d.dd )]=
	cand( 
		u( .is_full, %0, bio.covenant, circle of the crone ), 
		u( .at_least, %0, discipline.cruac, v( rite.touch_of_the_morrigan ))
	)
&prereq-text.rite.touch_of_the_morrigan [v( d.dd )]=
	Circle of the Crone, 
	Cruac at this level or higher
&tags.rite.touch_of_the_morrigan [v( d.dt )]=vampire.circle of the crone

&rite.blood_price [v( d.dd )]=4
&prerequisite.rite.blood_price [v( d.dd )]=
	cand( 
		u( .is_full, %0, bio.covenant, circle of the crone ), 
		u( .at_least, %0, discipline.cruac, v( rite.blood_price ))
	)
&prereq-text.rite.blood_price [v( d.dd )]=
	Circle of the Crone, 
	Cruac at this level or higher
&tags.rite.blood_price [v( d.dt )]=vampire.circle of the crone

&rite.willful_vitae [v( d.dd )]=4
&prerequisite.rite.rigor_mortis [v( d.dd )]=
	cand( 
		u( .is_full, %0, bio.covenant, circle of the crone ), 
		u( .at_least, %0, discipline.cruac, v( rite.rigor_mortis ))
	)
&prereq-text.rite.rigor_mortis [v( d.dd )]=
	Circle of the Crone, 
	Cruac at this level or higher
&tags.rite.rigor_mortis [v( d.dt )]=vampire.circle of the crone

&rite.blood_blight [v( d.dd )]=4
&prerequisite.rite.blood_blight [v( d.dd )]=
	cand( 
		u( .is_full, %0, bio.covenant, circle of the crone ), 
		u( .at_least, %0, discipline.cruac, v( rite.blood_blight ))
	)
&prereq-text.rite.blood_blight [v( d.dd )]=
	Circle of the Crone, 
	Cruac at this level or higher
&tags.rite.blood_blight [v( d.dt )]=vampire.circle of the crone

&rite.feeding_the_crone [v( d.dd )]=4
&prerequisite.rite.feeding_the_crone [v( d.dd )]=
	cand( 
		u( .is_full, %0, bio.covenant, circle of the crone ), 
		u( .at_least, %0, discipline.cruac, v( rite.feeding_the_crone ))
	)
&prereq-text.rite.feeding_the_crone [v( d.dd )]=
	Circle of the Crone, 
	Cruac at this level or higher
&tags.rite.feeding_the_crone [v( d.dt )]=vampire.circle of the crone


/*
--------------------------------------------------------------------------------
-- Theban Sorcery --------------------------------------------------------------
*/

&discipline.theban_sorcery [v( d.dd )]=1.2.3.4.5
&prerequisite.discipline.theban_sorcery [v( d.dd )]=
	cand( 
		u( .is, %0, bio.covenant, lancea et sanctum ), 
		u( .at_least, %0, merit.status_(lancea_et_sanctum), 1 )
	)
&prereq-text.discipline.theban_sorcery [v( d.dd )]=Lancea et Sanctum, 
	Status (Lancea et Sanctum) 1
&tags.discipline.theban_sorcery [v( d.dt )]=vampire.lancea et sanctum

// -- Mircales --

&class.miracle.? [v( d.dd )]=flag

&miracle.blood_scourge [v( d.dd )]=1
&prerequisite.miracle.blood_scourge [v( d.dd )]=
	cand( 
		u( .is_full, %0, bio.covenant, lancea et sanctum ), 
		u( .at_least, %0, 
			discipline.theban_sorcery, 
			v( miracle.blood_scourge )
		), 
		u( .at_least, %0, advantage.integrity, v( miracle.blood_scourge ))
	)
&prereq-text.miracle.blood_scourge [v( d.dd )]=
	Lancea et Sanctum, 
	Theban Sorcery at this level or higher, 
	Humanity at this level or higher
&tags.miracle.blood_scourge [v( d.dt )]=vampire.lancea et sanctum


&miracle.vitae_reliquary [v( d.dd )]=1
&prerequisite.miracle.vitae_reliquary [v( d.dd )]=
	cand( 
		u( .is_full, %0, bio.covenant, lancea et sanctum ), 
		u( .at_least, %0, 
			discipline.theban_sorcery, 
			v( miracle.vitae_reliquary )
		), 
		u( .at_least, %0, advantage.integrity, v( miracle.vitae_reliquary ))
	)
&prereq-text.miracle.vitae_reliquary [v( d.dd )]=
	Lancea et Sanctum, 
	Theban Sorcery at this level or higher, 
	Humanity at this level or higher
&tags.miracle.vitae_reliquary [v( d.dt )]=vampire.lancea et sanctum


&miracle.blandishment_of_sin [v( d.dd )]=1
&prerequisite.miracle.blandishment_of_sin [v( d.dd )]=
	cand( 
		u( .is_full, %0, bio.covenant, lancea et sanctum ), 
		u( .at_least, %0, 
			discipline.theban_sorcery, 
			v( miracle.blandishment_of_sin )
		), 
		u( .at_least, %0, advantage.integrity, v( miracle.blandishment_of_sin ))
	)
&prereq-text.miracle.blandishment_of_sin [v( d.dd )]=
	Lancea et Sanctum, 
	Theban Sorcery at this level or higher, 
	Humanity at this level or higher
&tags.miracle.blandishment_of_sin [v( d.dt )]=vampire.lancea et sanctum


&miracle.curse_of_babel [v( d.dd )]=2
&prerequisite.miracle.curse_of_babel [v( d.dd )]=
	cand( 
		u( .is_full, %0, bio.covenant, lancea et sanctum ), 
		u( .at_least, %0, 
			discipline.theban_sorcery, 
			v( miracle.curse_of_babel )
		), 
		u( .at_least, %0, advantage.integrity, v( miracle.curse_of_babel ))
	)
&prereq-text.miracle.curse_of_babel [v( d.dd )]=
	Lancea et Sanctum, 
	Theban Sorcery at this level or higher, 
	Humanity at this level or higher
&tags.miracle.curse_of_babel [v( d.dt )]=vampire.lancea et sanctum


&miracle.liar's_plague [v( d.dd )]=2
&prerequisite.miracle.liar's_plague [v( d.dd )]=
	cand( 
		u( .is_full, %0, bio.covenant, lancea et sanctum ), 
		u( .at_least, %0, 
			discipline.theban_sorcery, 
			v( miracle.liar's_plague )
		), 
		u( .at_least, %0, advantage.integrity, v( miracle.liar's_plague ))
	)
&prereq-text.miracle.liar's_plague [v( d.dd )]=
	Lancea et Sanctum, 
	Theban Sorcery at this level or higher, 
	Humanity at this level or higher
&tags.miracle.liar's_plague [v( d.dt )]=vampire.lancea et sanctum


&miracle.malediction_of_despair [v( d.dd )]=3
&prerequisite.miracle.malediction_of_despair [v( d.dd )]=
	cand( 
		u( .is_full, %0, bio.covenant, lancea et sanctum ), 
		u( .at_least, %0, 
			discipline.theban_sorcery, 
			v( miracle.malediction_of_despair )
		), 
		u( .at_least, %0, 
			advantage.integrity, 
			v( miracle.malediction_of_despair )
		)
	)
&prereq-text.miracle.malediction_of_despair [v( d.dd )]=
	Lancea et Sanctum, 
	Theban Sorcery at this level or higher, 
	Humanity at this level or higher
&tags.miracle.malediction_of_despair [v( d.dt )]=vampire.lancea et sanctum


&miracle.gift_of_lazarus [v( d.dd )]=4
&prerequisite.miracle.gift_of_lazarus [v( d.dd )]=
	cand( 
		u( .is_full, %0, bio.covenant, lancea et sanctum ), 
		u( .at_least, %0, 
			discipline.theban_sorcery, 
			v( miracle.gift_of_lazarus )
		), 
		u( .at_least, %0, advantage.integrity, v( miracle.gift_of_lazarus ))
	)
&prereq-text.miracle.gift_of_lazarus [v( d.dd )]=
	Lancea et Sanctum, 
	Theban Sorcery at this level or higher, 
	Humanity at this level or higher
&tags.miracle.gift_of_lazarus [v( d.dt )]=vampire.lancea et sanctum


&miracle.stigmata [v( d.dd )]=4
&prerequisite.miracle.stigmata [v( d.dd )]=
	cand( 
		u( .is_full, %0, bio.covenant, lancea et sanctum ), 
		u( .at_least, %0, 
			discipline.theban_sorcery, 
			v( miracle.stigmata )
		), 
		u( .at_least, %0, advantage.integrity, v( miracle.stigmata ))
	)
&prereq-text.miracle.stigmata [v( d.dd )]=
	Lancea et Sanctum, 
	Theban Sorcery at this level or higher, 
	Humanity at this level or higher
&tags.miracle.stigmata [v( d.dt )]=vampire.lancea et sanctum


&miracle.transubstatiation [v( d.dd )]=4
&prerequisite.miracle.transubstatiation [v( d.dd )]=
	cand( 
		u( .is_full, %0, bio.covenant, lancea et sanctum ), 
		u( .at_least, %0, 
			discipline.theban_sorcery, 
			v( miracle.transubstatiation )
		), 
		u( .at_least, %0, advantage.integrity, v( miracle.transubstatiation ))
	)
&prereq-text.miracle.transubstatiation [v( d.dd )]=
	Lancea et Sanctum, 
	Theban Sorcery at this level or higher, 
	Humanity at this level or higher
&tags.miracle.transubstatiation [v( d.dt )]=vampire.lancea et sanctum

/* 
--------------------------------------------------------------------------------
-- Coils & Scales --------------------------------------------------------------

Remember to make 'Mystery Coil' mandatory for Ordo's bio section.

A Dragon can have no more dots in each non-Mystery Coil than he possesses dots 
in the Status (Ordo Dracul) Merit

*/

&bio.mystery_coil [v( d.dd )]=
	Coil of the Ascendant.Coil of the Wyrm.Coil of the Voivode
&prerequisite.bio.mystery_coil [v( d.dd )]=
	u( .is_full, %0, bio.covenant, Ordo Dracul )
&prereq-text.bio.mystery_coil [v( d.dd )]=Covenant is Ordo Dracul
&tags.bio.mystery_coil [v( d.dt )]=vampire.ordo dracul


&discipline.coil_of_the_ascendant [v( d.dd )]=1.2.3.4.5
&prerequisite.discipline.coil_of_the_ascendant [v( d.dd )]=
	cand( 
		u( .is_full, %0, bio.covenant, Ordo Dracul ), 
		cor( 
			u( .is_full, %0, bio.mystery_coil, Coil of the Ascendant ), 
			u( .at_most_stat, %0, 
				discipline.coil_of_the_ascendant, 
				merit.status_(ordo_dracul), 
				%2 
			)
		)
	)
&prereq-text.discipline.coil_of_the_ascendant [v( d.dd )]=
	Covenant is Ordo Dracul, 
	If not Mystery Coil then may not be higher than Status (Ordo Dracul)
&tags.discipline.coil_of_the_ascendant [v( d.dt )]=vampire.coil.ordo dracul
&xp.discipline.coil_of_the_ascendant [v( d.xpcd )]=
	if( 
		u( .is_full, %0, bio.mystery_coil, Coil of the Ascendant ), 
		u( cost.standard, 3, %1, %2 ), 
		u( cost.standard, 4, %1, %2 )
	)


&discipline.coil_of_the_wyrm [v( d.dd )]=1.2.3.4.5
&prerequisite.discipline.coil_of_the_wyrm [v( d.dd )]=
	cand( 
		u( .is_full, %0, bio.covenant, Ordo Dracul ), 
		cor( 
			u( .is_full, %0, bio.mystery_coil, Coil of the Wyrm ), 
			u( .at_most_stat, %0, 
				discipline.coil_of_the_wyrm, 
				merit.status_(ordo_dracul), 
				%2 
			)
		)
	)
&prereq-text.discipline.coil_of_the_wyrm [v( d.dd )]=Covenant is Ordo Dracul, 
	If not Mystery Coil then may not be higher than Status (Ordo Dracul)
&tags.discipline.coil_of_the_wyrm [v( d.dt )]=vampire.coil.ordo dracul
&xp.discipline.coil_of_the_wyrm [v( d.xpcd )]=
	if( 
		u( .is_full, %0, bio.mystery_coil, Coil of the Wyrm ), 
		u( cost.standard, 3, %1, %2 ), 
		u( cost.standard, 4, %1, %2 )
	)


&discipline.coil_of_the_voivode [v( d.dd )]=1.2.3.4.5
&prerequisite.discipline.coil_of_the_voivode [v( d.dd )]=
	cand( 
		u( .is_full, %0, bio.covenant, Ordo Dracul ), 
		cor( 
			u( .is_full, %0, bio.mystery_coil, Coil of the Voivode ), 
			u( .at_most_stat, %0, 
				discipline.coil_of_the_wyrm, 
				merit.status_(ordo_dracul), 
				%2 
			)
		)
	)
&prereq-text.discipline.coil_of_the_voivode [v( d.dd )]=Covenant is Ordo Dracul, 
	If not Mystery Coil then may not be higher than Status (Ordo Dracul)
&tags.discipline.coil_of_the_voivode [v( d.dt )]=vampire.coil.ordo dracul
&xp.discipline.coil_of_the_voivode [v( d.xpcd )]=
	if( 
		u( .is_full, %0, bio.mystery_coil, Coil of the Voivode ), 
		u( cost.standard, 3, %1, %2 ), 
		u( cost.standard, 4, %1, %2 )
	)

// -- scales --
// A little trickery for XP. 2 - (do they have the discount? 1 or 0)

&class.scale.? [v( d.dd )]=flag

&scale.Day-Wake_Conditioning [v( d.dd )]=Coil of the Ascendant:1
&prerequisite.scale.Day-Wake_Conditioning [v( d.dd )]=
	u( .is_full, %0, bio.covenant, Ordo Dracul )
&prereq-text.scale.Day-Wake_Conditioning [v( d.dd )]=Covenant is Ordo Dracul
&tags.scale.Day-Wake_Conditioning [v( d.dt )]=vampire.ordo dracul
&xp.scale.Day-Wake_Conditioning [v( d.xpcd )]=
	sub( 2, u( .at_least, %0, discipline.coil_of_the_ascendant, 1 ))


&scale.Epidermal_Shielding_Bath [v( d.dd )]=Coil of the Ascendant:5
&prerequisite.scale.Epidermal_Shielding_Bath [v( d.dd )]=
	u( .is_full, %0, bio.covenant, Ordo Dracul )
&prereq-text.scale.Epidermal_Shielding_Bath [v( d.dd )]=Covenant is Ordo Dracul
&tags.scale.Epidermal_Shielding_Bath [v( d.dt )]=vampire.ordo dracul
&xp.scale.Epidermal_Shielding_Bath [v( d.xpcd )]=
	sub( 2, u( .at_least, %0, discipline.Coil of the Ascendant, 5 ))


&scale.Flesh_Graft_Treatment [v( d.dd )]=Coil of the Ascendant:4
&prerequisite.scale.Flesh_Graft_Treatment [v( d.dd )]=
	u( .is_full, %0, bio.covenant, Ordo Dracul )
&prereq-text.scale.Flesh_Graft_Treatment [v( d.dd )]=Covenant is Ordo Dracul
&tags.scale.Flesh_Graft_Treatment [v( d.dt )]=vampire.ordo dracul
&xp.scale.Flesh_Graft_Treatment [v( d.xpcd )]=
	sub( 2, u( .at_least, %0, discipline.Coil_of_the_Ascendant, 4 ))


&scale.Augmented_Vitae_Draught [v( d.dd )]=Coil of the Wyrm:4
&prerequisite.scale.Augmented_Vitae_Draught [v( d.dd )]=
	u( .is_full, %0, bio.covenant, Ordo Dracul )
&prereq-text.scale.Augmented_Vitae_Draught [v( d.dd )]=Covenant is Ordo Dracul
&tags.scale.Augmented_Vitae_Draught [v( d.dt )]=vampire.ordo dracul
&xp.scale.Augmented_Vitae_Draught [v( d.xpcd )]=
	sub( 2, u( .at_least, %0, discipline.Coil_of_the_Wyrm, 4 ))


&scale.Kindred_Sense_Endowment [v( d.dd )]=Coil of the Wyrm:2
&prerequisite.scale.Kindred_Sense_Endowment [v( d.dd )]=
	u( .is_full, %0, bio.covenant, Ordo Dracul )
&prereq-text.scale.Kindred_Sense_Endowment [v( d.dd )]=Covenant is Ordo Dracul
&tags.scale.Kindred_Sense_Endowment [v( d.dt )]=vampire.ordo dracul
&xp.scale.Kindred_Sense_Endowment [v( d.xpcd )]=
	sub( 2, u( .at_least, %0, discipline.Coil_of_the_Wyrm, 2 ))


&scale.Surgical_Heart_Removal [v( d.dd )]=Coil of the Wyrm:5
&prerequisite.scale.Surgical_Heart_Removal [v( d.dd )]=
	u( .is_full, %0, bio.covenant, Ordo Dracul )
&prereq-text.scale.Surgical_Heart_Removal [v( d.dd )]=Covenant is Ordo Dracul
&tags.scale.Surgical_Heart_Removal [v( d.dt )]=vampire.ordo dracul
&xp.scale.Surgical_Heart_Removal [v( d.xpcd )]=
	sub( 2, u( .at_least, %0, discipline.Coil_of_the_Wyrm, 5 ))


&scale.Blood_Cleansing_Ritual [v( d.dd )]=Coil of the Voivode:1
&prerequisite.scale.Blood_Cleansing_Ritual [v( d.dd )]=
	u( .is_full, %0, bio.covenant, Ordo Dracul )
&prereq-text.scale.Blood_Cleansing_Ritual [v( d.dd )]=Covenant is Ordo Dracul
&tags.scale.Blood_Cleansing_Ritual [v( d.dt )]=vampire.ordo dracul
&xp.scale.Blood_Cleansing_Ritual [v( d.xpcd )]=
	sub( 2, u( .at_least, %0, discipline.Coil_of_the_Voivode, 1 ))


&scale.Fealty's_Reward [v( d.dd )]=Coil of the Voivode:3
&prerequisite.scale.Fealty's_Reward [v( d.dd )]=
	u( .is_full, %0, bio.covenant, Ordo Dracul )
&prereq-text.scale.Fealty's_Reward [v( d.dd )]=Covenant is Ordo Dracul
&tags.scale.Fealty's_Reward [v( d.dt )]=vampire.ordo dracul
&xp.scale.Fealty's_Reward [v( d.xpcd )]=
	sub( 2, u( .at_least, %0, discipline.Coil_of_the_Voivode, 3 ))


&scale.Mass_Embrace [v( d.dd )]=Coil of the Voivode:5
&prerequisite.scale.Mass_Embrace [v( d.dd )]=
	u( .is_full, %0, bio.covenant, Ordo Dracul )
&prereq-text.scale.Mass_Embrace [v( d.dd )]=Covenant is Ordo Dracul
&tags.scale.Mass_Embrace [v( d.dt )]=vampire.ordo dracul
&xp.scale.Mass_Embrace [v( d.xpcd )]=
	sub( 2, u( .at_least, %0, discipline.Coil_of_the_Voivode, 5 ))


&scale.Sanguinary_Invigoration [v( d.dd )]=Coil of the Voivode:2
&prerequisite.scale.Sanguinary_Invigoration [v( d.dd )]=
	u( .is_full, %0, bio.covenant, Ordo Dracul )
&prereq-text.scale.Sanguinary_Invigoration [v( d.dd )]=Covenant is Ordo Dracul
&tags.scale.Sanguinary_Invigoration [v( d.dt )]=vampire.ordo dracul
&xp.scale.Sanguinary_Invigoration [v( d.xpcd )]=
	sub( 2, u( .at_least, %0, discipline.Coil_of_the_Voivode, 2 ))




/*

--=-=-=-=-=-=-=-=-=-=


System: A Dragon learns new tiers in his Mystery Coil for three Experiences per 
dot, and during character creation a player may spend one of his starting 
Discipline dots to take a dot in his Mystery Coil. Learning Coils outside a 
Dragon's chosen Mystery is possible, but the ideological and personal 
differences between the adherents of different mysteries mean that a Dragon from 
a different path may have to prove himself. A Dragon can have no more dots in 
each non-Mystery Coil than he possesses dots in the Status (Ordo Dracul) Merit. 
Non- Mystery Coils cost four Experiences per new dot, and cannot be learned 
during character creation.

System: All Scales have a prerequisite Coil, a particular tier with which the 
Scale resonates. For Dragons who do not meet this prerequisite Scales cost two 
Experiences, if the prerequisite is met the Experience cost drops to one.

--


*/


/* 
################################################################################
## VAMPIRE CHARGEN #############################################################


================================================================================
== CHARGEN: ATTRIBUTES =========================================================

Doing something slightly different here until the chargen system can handle it.
Instead we will be reporting in cg/check, 'what if we reduce each 
Favored Attribute by 1? Then what would it look like?'

It is wildly substandard.

*/



/*
================================================================================
== CHARGEN: ALLOCATIONS ========================================================

--------------------------------------------------------------------------------
-- Allocated Merits: Blood Potency ---------------------------------------------
*/

&f.allocated.power-trait.vampire [v(d.cg)]=
	mul( 
		dec( first( get( %0/_advantage.blood_potency ), . )), 
		5 
	)


/*
--------------------------------------------------------------------------------
-- Allocated Disciplines -------------------------------------------------------

disciplines`in-clan disciplines`in-bloodline disciplines

(we don't have bloodline yet, but you know we will)

*/

&f.allocated.disciplines [v( d.cg )]=
	localize( strcat( 
		setq( d, edit( lattr( %0/_discipline.* ), _DISCIPLINE., DISCIPLINE. )), 
		setq( i, u( f.list-stats-tags, %0, discipline, get( %0/_bio.clan ))), 
		setq( b, 
			u( f.list-stats-tags, %0, discipline, get( %0/_bio.bloodline ))
		), 
		ladd( iter( setdiff( %qd, %qi %qb ), first( get( %0/_%i0 ), . ))), `, 
		ladd( iter( %qi, first( get( %0/_%i0 ), . ))), `, 
		ladd( iter( %qb, first( get( %0/_%i0 ), . )))
	))



/*
================================================================================
== CHARGEN: BIO ================================================================

--------------------------------------------------------------------------------
-- Bio Check -------------------------------------------------------------------

*/

&check.bio.ghoul [v( d.cg )]=virtue vice clan
&check.bio.vampire [v( d.cg )]=embrace_date mask dirge clan 
	[if( u( v( d.dd )/.is_full, %0, bio.covenant, Ordo Dracul ), mystery_coil )]



/* 
================================================================================
== CHARGEN CHECK ===============================================================


--------------------------------------------------------------------------------
-- Favored Attribute -----------------------------------------------------------

currently: 
	stat/set <attribute>.favored=1

(I hope to get this changed.)

1. check that attributes with 'favored' subtype are allowed
2. check that there's only one
3. check what happens if we -1 that from the system

*/

&check.chargen.attributes.vampire [v( d.cg )]=
	strcat( 
		setq( f, v( d.vampire.favored_attributes.[get( %0/_bio.clan )] )), 
		setq( a, 
			lcstr( 
				iter( lattr( %0/_attribute.*.favored ), elements( %i0, 2, . ))
			)
		), 
		setq( i, setinter( %qa, %qf )), 
		setq( c, ulocal( f.pts-valid?.attributes, %0, attribute.%qi:-1 )), 

		ulocal( f.allocated.attributes, %0 ), %b, %(of 5/4/3 + favored%), %b, 
		ulocal( display.check.stats, %0, attributes, attribute.%qa:-1 ), %r, 

		%b %b%b, ansi( h, Favored Attribute ), :, %b, 
		titlestr( itemize( %qa )), %b, 
		%[, 
		case( 1, 
			eq( words( %qa ), 0 ), ansi( r, none set ), 
			gt( words( %qa ), 1 ), ansi( r, too many set ), 
			neq( words( %qi ), 1 ), ansi( r, not allowed for your clan ), 
			not( %qc ), ansi( r, bonus point not spent ), 
			ansi( g, OK )
		), 
		%]
	)

&d.vampire.favored_attributes.daeva [v( d.cg )]=dexterity manipulation
&d.vampire.favored_attributes.gangrel [v( d.cg )]=composure stamina
&d.vampire.favored_attributes.mekhet [v( d.cg )]=intelligence wits
&d.vampire.favored_attributes.nosferatu [v( d.cg )]=composure strength
&d.vampire.favored_attributes.ventrue [v( d.cg )]=presence resolve

/*
--------------------------------------------------------------------------------
-- Chargen Check: Vampire ------------------------------------------------------

*/

&check.chargen.vampire [v( d.cg )]=
	strcat( 
		u( check.disciplines, %0, vampire ), 
		case( get( %0/_bio.covenant ), 
			Circle of the Crone, 
			if( hasattr( %0, _discipline.cruac ), 
				u( check.disciplines.cruac, %0 )
			), 

			Lancea et Sanctum, 
			if( hasattr( %0, _discipline.theban_sorcery ), 
				u( check.disciplines.theban_sorcery, %0 )
			), 

			Ordo Dracul, 
			if( t( lattr( %0/_scale.* )), 
				u( check.disciplines.coils, %0 )
			)
		)
	)


/*
--------------------------------------------------------------------------------
-- Chargen Check: Ghoul --------------------------------------------------------

*/

&check.chargen.ghoul [v( d.cg )]=
	u( check.disciplines, %0, ghoul )


/*
--------------------------------------------------------------------------------
-- Chargen Check: Disciplines --------------------------------------------------

vampire: 3 disc, 2 in-clan
ghoul: 2 disc, 2 in-clan

0: sheet dbref
1: template 

*/

&check.disciplines [v( d.cg )]=
	udefault( check.disciplines.[get( %0/_bio.template )], 
		** check failed **, 
		%0 
	) 

&check.disciplines.vampire [v( d.cg )]=
	strcat( 
		setq( 9, u( f.allocated.disciplines, %0 )),
		setq( t, ladd( %q9, ` )), 
		setq( i, ladd( elements( %q9, 2 3, ` ), ` )), 
		setq( o, elements( %q9, 1, ` )), 

		%b, %b, 
		ansi( h, Total Disciplines ), :, %b, 
		if( eq( %qt, 0 ), ansi( xh, <none> ), %qt ), %b, 
		%(of 3%), %b, 
		u( check.disciplines.vampire.total, %qt ), 
		%r, 

		%b, %b, %b, %b, 
		ansi( h, In-Clan ), :, %b, 
		if( eq( %qi, 0 ), ansi( xh, <none> ), %qi ), %b, 
		%(at least 2%), %b, 
		u( check.disciplines.vampire.in-clan, %qi ), 
		%r, 

		%b, %b, %b, %b, 
		ansi( h, Non-Clan ), :, %b, 
		if( eq( %qo, 0 ), ansi( xh, <none> ), %qo ), %b, 
		%(at most 1%), %b, 
		u( check.disciplines.vampire.non-clan, %qo ), 

		%r 
	)

&check.disciplines.vampire.total [v( d.cg )]=
	u( display.check.ok-no, eq( %0, 3 ))
&check.disciplines.vampire.in-clan [v( d.cg )]=
	u( display.check.ok-no, gte( %0, 2 ))
&check.disciplines.vampire.non-clan [v( d.cg )]=
	u( display.check.ok-no, lte( %0, 1 ))

&check.disciplines.ghoul [v( d.cg )]=
	strcat( 
		setq( 9, u( f.allocated.disciplines, %0 )),
		setq( t, ladd( %q9, ` )), 
		setq( i, ladd( elements( %q9, 2 3, ` ), ` )), 
		setq( o, elements( %q9, 1, ` )), 

		%b, %b, 
		ansi( h, Total Disciplines ), :, %b, 
		if( eq( %qt, 0 ), ansi( xh, <none> ), %qt ), %b, 
		%(of 2%), %b, 
		u( check.disciplines.ghoul.total, %qt ), 
		%r, 

		%b, %b, %b, %b, 
		ansi( h, In-Clan ), :, %b, 
		if( eq( %qi, 0 ), ansi( xh, <none> ), %qi ), %b, 
		%(of 2%), %b, 
		u( check.disciplines.ghoul.in-clan, %qi ), 
		%r, 

		%b, %b, %b, %b, 
		ansi( h, Non-Clan ), :, %b, 
		if( eq( %qo, 0 ), ansi( xh, <none> ), %qo ), %b, 
		%(of none%), %b, 
		u( check.disciplines.ghoul.non-clan, %qo ), 

		%r 
	)

&check.disciplines.ghoul.total [v( d.cg )]=
	u( display.check.ok-no, eq( %0, 2 ))
&check.disciplines.ghoul.in-clan [v( d.cg )]=
	u( display.check.ok-no, eq( %0, 2 ))
&check.disciplines.ghoul.non-clan [v( d.cg )]=
	u( display.check.ok-no, eq( %0, 0 ))


/*
--------------------------------------------------------------------------------
-- Chargen Check: Cruac --------------------------------------------------------

For each dot in Cruac, one dot of that level (or lower) in Rite

*/

&check.disciplines.cruac [v( d.cg )]=
	strcat( 
		setq( r, lattr( %0/_rite.* )), 
		setq( n, iter( %qr, get( %0/%i0 ))), 
		setq( l, first( get( %0/_discipline.cruac ), . )), 
		setq( t, ladd( %qn )), 
		setq( o, ladd( lnum( 1, %ql ))), 

		%b%b, ansi( h, Rites ), :, %b, 
		iter( %qr, 
			strcat( 
				titlestr( edit( rest( %i0, . ), _, %b )), 
				%b%(, 
				get( %0/%i0 ), 
				%) 
			), 
			, %,%b 
		), 
		%r, 
		%b %b%b, ansi( h, Rite Count ), :, %b, words( %qr ), %b, %(of %ql%), %b, 
		u( display.check.ok-no, eq( words( %qr ), %ql )), %r, 
		%b %b%b, ansi( h, Rite Levels ), :, %b, %qt %(of %qo%), %b, 
		u( display.check.ok-no, eq( %qt, %qo )), %r, 
	)


/*
--------------------------------------------------------------------------------
-- Chargen Check: Theban Sorcery  ----------------------------------------------

For each dot in Theban Sorcery, one dot of that level (or lower) in Miracle

*/

&check.disciplines.theban_sorcery [v( d.cg )]=
	strcat( 
		setq( r, lattr( %0/_miracle.* )), 
		setq( n, iter( %qr, get( %0/%i0 ))), 
		setq( l, first( get( %0/_discipline.theban_sorcery ), . )), 
		setq( t, ladd( %qn )), 
		setq( o, ladd( lnum( 1, %ql ))), 

		%b%b, ansi( h, Miracles ), :, %b, 
		iter( %qr, 
			strcat( 
				titlestr( edit( rest( %i0, . ), _, %b )), 
				%b%(, 
				get( %0/%i0 ), 
				%) 
			), 
			, %,%b 
		), 
		%r, 
		%b %b%b, ansi( h, Miracle Count ), :, 
		%b, words( %qr ), %b, %(of %ql%), %b, 
		u( display.check.ok-no, eq( words( %qr ), %ql )), %r, 
		%b %b%b, ansi( h, Miracle Levels ), :, %b, %qt %(of %qo%), %b, 
		u( display.check.ok-no, eq( %qt, %qo )), %r, 
	)


/*
--------------------------------------------------------------------------------
-- Chargen Check: Coils  -------------------------------------------------------

Character should have no Scales

*/

&check.disciplines.coils [v( d.cg )]=
	strcat( 
		setq( r, lattr( %0/_scale.* )), 

		%b%b, ansi( h, Scales ), :, %b, 
		iter( %qr, 
			strcat( 
				titlestr( edit( rest( %i0, . ), _, %b )), 
				%b%(, 
				get( %0/%i0 ), 
				%) 
			), 
			, %,%b 
		), 
		%r, 
		%b %b%b, ansi( h, Scale Count ), :, %b, words( %qr ), %b, 
		%[, ansi( r, no scales at chargen ), %], 
		%r, 
	)




/*
################################################################################
## VAMPIRE: XP COSTS ###########################################################
*/

&xp.advantage.blood_potency [v( d.xpcd )]=
	u( cost.standard, 5, %1, %2 )
	
// discipline matches clan or bloodline: 3xp, else 4xp 


&xp.discipline [v( d.xpcd )]=
	case( 1, 
		u( v( d.sfp )/f.hastag?.workhorse, 
			%3, 
			[u( .value, %0, bio.clan )].
			[u( .value, %0, bio.bloodline )]
		), 
		u( cost.standard, 3, %1, %2 ), 
		u( cost.standard, 4, %1, %2 )
	)

&d.restricted.types.vampire [v( d.xpas )]=discipline
&d.restricted.stats.vampire [v( d.xpas )]=
	advantage.blood_potency



/*
################################################################################
## VAMPIRE: SHEET ##############################################################
*/

// -- Bio ----------------------------------------------------------------------

&bio.default.ghoul [v( d.nsc )]=
	birthdate concept clan coterie template virtue vice 

&bio.default.vampire [v( d.nsc )]=
	localize( 
		[setq( c, 0 )] 
		embrace_date concept clan 
		[if( hasattr( %0, _bio.bloodline ), bloodline [setq( c, inc( %qc ))] )] 
		covenant 
		[if( hasattr( %0, _bio.mystery_coil ), 
			mystery_coil [setq( c, inc( %qc ))] 
		)] 
		template mask dirge coterie 
		[repeat( #-1%b, %qc )]
	)

// -- Powers -------------------------------------------------------------------

&powers.disciplines [v( d.nsc )]=
	iter( sort( edit( lattr( %0/_discipline.* ), _DISCIPLINE., )), 
		ulocal( f.cheat_getstat.with_name, %0, discipline.%i0, numeric ), 
		, | 
	)

&powers.devotions [v( d.nsc )]=
	iter( sort( edit( lattr( %0/_devotion.* ), _DEVOTION., )), 
		ulocal( f.cheat_getstat.name_only, %0, devotion.%i0 ), 
		, | 
	)

&block.powers.vampire [v( d.sheet )]=u( block.powers.disciplines, %0, %1 )
&block.powers.ghoul [v( d.sheet )]=u( block.powers.disciplines, %0, %1 )

&block.powers.disciplines [v( d.sheet )]=
	strcat( 
		setq( w, 79 ), 
		setq( t, 70 ), 
		setq( v, ulocal( block.powers.disciplines.devotions, %0 )), 

// disciplines
		u( block.powers.disciplines.default, %0 ), %r, 

// .. convent-based disciplines
		case( get( %0/_bio.covenant ), 
			Circle of the Crone, 
			if( hasattr( %0, _discipline.cruac ), 
				ulocal( block.powers.disciplines.rites, %0 )
			), 

			Lancea et Sanctum, 
			if( hasattr( %0, _discipline.theban_sorcery ), 
				ulocal( block.powers.disciplines.miracles, %0 )
			), 

			Ordo Dracul, 
			if( t( lattr( %0/_scale.* )), 
				ulocal( block.powers.disciplines.scales, %0 )
			)
		), 

// .. bloodline-based disciplines
		case( get( %0/_bio.bloodline ), 
			@@( placeholder )
		), 

// devotions
		if( strlen( %qv ), %qv ), 

		@@( to be continued ), 
	)

// -- Disciplines: Default -----------------------------------------------------

&block.powers.disciplines.default [v( d.sheet )]=
	u( format.block.two-columns, u( powers.disciplines, %0 ), Disciplines )

// -- Disciplines: Devotions (if exist) ----------------------------------------

&block.powers.disciplines.devotions [v( d.sheet )]=
	if( strlen( setr( x, u( powers.devotions, %0 ))), 
		u( format.block.two-columns, %qx, Devotions, name-only )
		%r 
	)

// -- Disciplines: Rites (Cruac) -----------------------------------------------

&powers.disciplines.rites [v( d.nsc )]=
	iter( sort( edit( lattr( %0/_rite.* ), _RITE., )), 
		ulocal( f.cheat_getstat.with_name, %0, rite.%i0, numeric ), 
		, | 
	)

&block.powers.disciplines.rites [v( d.sheet )]=
	if( strlen( setr( x, u( powers.disciplines.rites, %0 ))), 
		u( format.block.two-columns, %qx, Rites %(Cruac%) )
		%r 
	)


// -- Disciplines: Miracles (Theban Sorcery) -----------------------------------

&powers.disciplines.miracles [v( d.nsc )]=
	iter( sort( edit( lattr( %0/_miracle.* ), _MIRACLE., )), 
		ulocal( f.cheat_getstat.with_name, %0, miracle.%i0, numeric ), 
		, | 
	)

&block.powers.disciplines.miracles [v( d.sheet )]=
	if( strlen( setr( x, u( powers.disciplines.miracles, %0 ))), 
		u( format.block.two-columns, %qx, Miracles %(Theban Sorcery%) )
		%r 
	)

// -- Disciplines: Scales (Coil)  ----------------------------------------------

&powers.disciplines.scales [v( d.nsc )]=
	iter( sort( edit( lattr( %0/_scale.* ), _SCALE., )), 
		ulocal( f.cheat_getstat.with_name, %0, miracle.%i0, numeric ), 
		, | 
	)

&block.powers.disciplines.scales [v( d.sheet )]=
	if( strlen( setr( x, u( powers.disciplines.scales, %0 ))), 
		u( format.block.two-columns, %qx, Scales %(Coils%), name-only )
		%r 
	)


// -- Advantages ---------------------------------------------------------------

&traits.morality.vampire [v( d.nsc )]=
	ulocal( f.cheat_getstat.morality, %0, integrity, Humanity )

&traits.vitae [v( d.nsc )]=
	u( f.cheat_getstat.pool, %0, vitae )

&block.traits.vitae [v( d.sheet )]=
	strcat( 
		setq( w, 38 ), 
		setq( t, 10 ), 

// .. vitae
		setq( x, ulocal( traits.vitae, %0 )), 
		setq( c, rest( setr( y, first( %qx, | )), : )), 
		setq( p, last( %qx, : )), 

// .. return
		u( display.trait-and-value, %qy, %qt, %qw, pool, %b, %qp )
	)


&block.traits.vampire [v( d.sheet )]=
	strcat( 
		setq( w, 38 ), 
		setq( t, 10 ), 

// .. vitae (power pool)
		setq( r, ulocal( block.traits.vitae, %0 )), 

// .. blood potency (supernatural resistance)
		setq( z, 
			u( display.trait-and-value, 
				u( traits.supernatural_resistance, %0 ), 
				inc( strlen( Blood Potency )), %qw, numeric 
			)
		), 

// .. display
		vcolumns( 
			%qw:%qr, 
			%qw:%qz, 
			|, %b 
		), %r, 
	)


&block.traits.ghoul [v( d.sheet )]=
	strcat( 
		setq( w, 38 ), 
		setq( t, 10 ), 
		vcolumns( 
			%qw:[u( block.traits.vitae, %0 )], 
			|, %b 
		), %r, 
	)







/*
################################################################################
## VAMPIRE: NOTES TO SELF ######################################################

An in-clan Discipline dot costs three Experiences. Any other Discipline or blood 
sorcery costs four. As well, Disciplines sometimes require teachers


Primary Coil is 3 XP, secondary Coils are 4.


Choose a Mask and a Dirge for your character. Whereas a mortal character has a 
Virtue and a Vice, Kindred characters have Masks and Dirges.

Mask & Dirge Archetypes: 
	Authoritarian.Child.Competitor.Conformist.Conspirator.Courtesan.
	Cult Leader.Deviant.Follower.Guru.Idealist.Jester.Jester.Junkie.Martyr.
	Masochist.Monster.Nomad.Nurturer.Perfectionist.Penitent.Questioner.Rebel.
	Scholar.Social Chameleon.Survivor.Visionary

touchstone

devotions

* Favored Attributes:
Daeva: Dexterity or Manipulation
Gangrel: Composure or Stamina
Mekhet: Intelligence or Wits
Nosferatu: Composure or Strength
Ventrue: Presence or Resolve

if ( group total = group total + 1 )
	if ( group section = group section + 1 )
		if( attribute - 1 sets everything right )
			ok!



* Favored Disciplines: 

Daeva Disciplines: *Celerity, *Majesty, *Vigor
Gangrel Disciplines: *Animalism, *Protean, *Resilience 
Mekhet Disciplines: *Auspex, *Celerity, *Obfuscate 
Nosferatu Disciplines: *Nightmare, *Obfuscate, *Vigor 
Ventrue Disciplines: *Animalism, *Dominate, *Resilience

Blood Potency: p.90
Humanity:p.106

Coils of the Dragon - Coils, three types
Crúac - blood sorcery 
Theban Sorcery - blood sorcery


-- Ghoul Cgen Notes ------------------------------------------------------------

Clan: Your ghoul has a regnant, usually the vampire who first gave her Vitae and 
spent a point of Willpower on her. Think about who this regnant is (maybe one of 
the other player’s characters), and decide on his clan.

Disciplines: Select two dots of Disciplines that are in-clan for your 
character’s regnant. At least one physical Discipline dot is recommended, but 
not required. (You might want to look at the ghoul Discipline rules below 
first.)

Blood Potency: Your character gains the Blood Potency trait at 0, allowing him 
to store and spend Vitae. This trait cannot be increased with Experiences or 
time.

*/




/*
================================================================================
== SPEND/REGAIN VITAE ==========================================================

expands: 9c - Spend and Regain

	spend vitae=<amt/method> for <reason>

spend limit per Blood Potency: 
	1 2 3 4 5 6 7 8 10 15

regain methods:
	suckin' da blood


--------------------------------------------------------------------------------
-- Spend/Regain Methods --------------------------------------------------------
*/

&regain.methods.vitae [v( d.psrs )]=|all
&spend.methods.vitae [v( d.psrs )]=[@@( nothing but numeric allowed here )]


/* 
--------------------------------------------------------------------------------
-- Spend/Regain Vitae Amts -----------------------------------------------------
*/

&amt.spend.numeric.vitae [v( d.psrs )]=
	if( t( u( amt.spend.numeric.default, %0, %1, %2 )), 
		if( 
			lte( %2, 
				elements( 
					1 1 2 3 4 5 6 7 8 10 15, 
					inc( getstat( %0/Blood Potency ))
				)
			), 
			mul( %2, -1 ), 
			#-1 You can't spend that much at one time 
		), 
		u( amt.spend.numeric.default, %0, %1, %2 )
	)


/* 
--------------------------------------------------------------------------------
-- Spend Vitae Trigger ---------------------------------------------------------
*/

&spend.trigger.vitae [v( d.psrs )]=
	think strcat( 
//	@pemit %0=strcat( 
//		DEBUGGING:, %r, 
		m:, %b, setr( m, u( f.match_method, %1, spend, vitae, %2 )), %r, 
		a:, %b, setr( a, u( amt.spend, %1, vitae, %qm )), %r, 
		s:, %b, setr( s, hasattr( %1, _advantage.Vitae_Maximum )), %r, 
	); 

	@assert strlen( %qs )={ 
		@pemit %0=u( .msg, vitae/spend, 
			cat( 
				if( strmatch( %0, %1 ), You, name( %1 )), 
				must have a Vitae pool 
			)
		) 
	}; 

	@assert strlen( %qm )={ 
		@pemit %0=u( .msg, vitae/spend, I could not find the method '%2' ) 
	}; 

	@assert t( %qa )={ 
		@pemit %0=u( .msg, vitae/spend, rest( %qa )) 
	}; 

	@assert t( setr( e, u( f.pool.canchange, %1, Vitae, %qa )))={ 
		@pemit %0=u( .msg, vitae/spend, rest( %qe )) 
	}; 

	@assert t( setr( e, u( f.pool.changestat, %1, vitae, %qa )))={ 
		@pemit %0=u( .msg, vitae/spend, rest( %qe )) 
	}; 

	think e: 
//	@pemit %0=e: 
		[setr( e, 
			u( display.number, %0, %1, vitae, spend, %qa, %qm, %4 )
		)]; 
	@eval u( f.announcement, %0, %1, spend, %qe ); 


/* 
--------------------------------------------------------------------------------
-- Regain Vitae Trigger --------------------------------------------------------
*/

&regain.trigger.vitae [v( d.psrs )]=
	think strcat( 
		m:, %b, setr( m, u( f.match_method, %1, regain, vitae, %2 )), %r, 
		a:, %b, setr( a, u( amt.regain, %1, vitae, %qm )), %r, 
		s:, %b, setr( s, hasattr( %1, _advantage.Vitae_Maximum )), %r, 
	); 

	@assert strlen( %qs )={ 
		@pemit %0=u( .msg, vitae/regain, 
			cat( 
				if( strmatch( %0, %1 ), You, name( %1 )), 
				must have a Vitae pool 
			)
		) 
	}; 

	@assert strlen( %qm )={ 
		@pemit %0=u( .msg, vitae/regain, I could not find the method '%2' ) 
	}; 

	@assert t( %qa )={ 
		@pemit %0=u( .msg, vitae/regain, rest( %qa )) 
	}; 

	@assert t( setr( e, u( f.pool.canchange, %1, Vitae, %qa )))={ 
		@pemit %0=u( .msg, vitae/regain, rest( %qe )) 
	}; 

	@assert t( setr( e, u( f.pool.changestat, %1, vitae, %qa )))={ 
		@pemit %0=u( .msg, vitae/regain, rest( %qe )) 
	}; 

	think e: 
		[setr( e, 
			u( display.number, %0, %1, vitae, regain, %qa, %qm, %4 )
		)]; 
	@eval u( f.announcement, %0, %1, regain, %qe ); 

/*
--------------------------------------------------------------------------------
-- Raw Help File for Spend/Regain ----------------------------------------------

VITAE (SPEND)
    <num>: Only a numeric value is allowed here.

VITAE (REGAIN)
    <num>, <roll>, or 'all': No additional systems.


--------------------------------------------------------------------------------
-- Softcode Help File for Spend/Regain -----------------------------------------
*/

@edit #xxx/help~ic_systems~spend_and_regain=$,{ 
 %r %r
[ansi( h, VITAE \(SPEND\) )]%r
%b %b <num>: Only a numeric value is allowed here. %r
 %r
[ansi( h, VITAE \(REGAIN\) )]%r
%b %b <num>, <roll>, or 'all': No additional systems.
}
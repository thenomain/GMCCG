/*
Prerequisites Check

================================================================================
== Check Prerequisites =========================================================

Stat prerequisites come in several forms:

	Character Generation Only: via the tag "cgen-only"
	Template Only: via a tag matching one of the character's templates
	Stats/Others: via &prerequisite.<statpath> on the data dictionary
		(reasons for errors on this are stored on &prereq-text.<statpath>)

	The cg-only prereq is a red herring for cg, but not for xp-spends.


--------------------------------------------------------------------------------
-- Prereq Check: CG-Only -------------------------------------------------------

 c & !a = true
 c &  a = false
!c & !a = true
!c &  a = true

--

0: player dbref
1: stat (without instance)
returns: 1 if ok, #-1 <reason> if not

*/

&f.prerequisite.cg-only [v( d.cg )]=
	if( 
		cor( 
			not( hastag?( rest( %1, . ), chargen-only )), 
			isapproved( %0, chargen )
		), 
		1, 
		#-1 Chargen-Only stats cannot be gained after approval
	)

/* -- test --

think u( v( d.cg )/f.prerequisite.cg-only, %#, merit.giant )


--------------------------------------------------------------------------------
-- Prereq Check: Template ------------------------------------------------------

Similar code also exists on +stat/template and +stat/view, but I'm not up to 
re-writing them all together right now. It will probably also end up in the XP 
spend system.

--

0: sheet dbref
1: _sheet.statpath_(possibly_instanced)
returns: 1 if ok, #-1 <reason> if not

i: instance (if exists)
s: _sheet.statpath_without_instance_()
t: templates for this stat

*/

&f.prerequisite.template [v( d.cg )]=
	localize( strcat( 
		setq( s, ulocal([u( d.sfp )]/f.statpath-without-instance, %1 )), 

// .. pull which templates are in this stat's tags
		setq( t, 
			setinter( 
				lcstr( u( [u( d.dd )]/bio.template )), 
				lcstr( u( [u( d.dt )]/tags.[rest( %qs, _ )] )), 
				. 
			)
		), 

// .. are there any? then compare to character's template(s), 
		if( 
			t( %qt ), 
			if( 
				t( setinter( lcstr( u( %0/_bio.template )), %qt, . )), 
				1, 
				#-1 Character Template Not Allowed For This Stat
			), 
// .. else return "1" because it passes all template checks
			1 
		)
	))

/* -- test --

think u( v( d.cg )/f.prerequisite.template, %#, _merit.medium )


--------------------------------------------------------------------------------
-- Prereq Check: Other ---------------------------------------------------------

That is, the 'Dex 3+, etc.' checks.

--

0: sheet dbref
1: _sheet.statpath_(possibly_instanced)
2: value to raise by
returns: 1 if ok, #-1 <reason> if not

i: instance (if exists)
s: _sheet.statpath_without_instance_()
p: return for &prerequisite.<statpath>

OLD VERSION: I need to stop writing the same function twice.

&f.prerequisite.other [v( d.cg )]=
	localize( strcat( 
		setq( i, before( rest(%1, %( ), %) )), 
		setq( s, ulocal( [u( d.sfp )]/f.statpath-without-instance, %1 )), 
		setq( p, 
			ulocal( [u( d.dd )]/prerequisite.[rest( %qs, _ )], %0, %qi, %2 )
		), 

// .. if null was returned, that's a 1, else check in more detail
		case( 0, 
			comp( %qp, ), 1, 
			%qp, #-1 [u( [u( d.dd )]/prereq-text.[rest( %qs, _ )], %0 )], 
			1 
		)
	))

*/


&f.prerequisite.other [v( d.cg )]=
	localize( strcat( 
		setq( i, before( rest( %1, %( ), %) )), 
		setq( s, 
			rest( ulocal( v( d.sfp )/f.statpath-without-instance, %1 ), _ )
		), 
		u( v( d.sfp )/f.prereq-check-other, %0, %qs, %qi, %2 )
	))


/* -- test -- 

think u( v( d.cg )/f.prerequisite.other, %#, _merit.unarmed_defense )
think u( v( d.cg )/f.prerequisite.other, %#, _merit.barfly )

*/